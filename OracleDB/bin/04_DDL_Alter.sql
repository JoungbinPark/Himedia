-- 생성
CREATE TABLE 테이블이름();
CREATE USER scott indentified by tiger;

-- 수정
ALTER TABLE 테이블이름 <수정내용>;
ALTER USER 유저이름 indentified by 비밀번호;

-- 1. 필드명의 변경
ALTER TABLE RENAME COLUMN 변경전필드이름 TO 변경후필드이름;

-- booklist테이블의 subject필드명을 title로 수정
ALTER TABLE booklist RENAME COLUMN subject TO title;

-- 반대로 title 필드명을 subject 필드명으로 수정
ALTER TABLE BOOKLIST RENAME COLUMN TITLE TO SUBJECT;

-- rentlist의 outprice 필드의 이름을 rentprice로 수정
ALTER TABLE BOOKLIST RENAME COLUMN OUTPRICE TO RENTPRICE;

-- memberlist 테이블의 membername 필드를 name으로 변경
ALTER TABLE MEMBERLIST RENAME COLUMN MEMBERNAME TO NAME;

-- rentlist 테이블의 rent_date 필드를 rentdate로 변경
ALTER TABLE RENTLIST RENAME COLUMN RENT_DATE TO RENTDATE;

--rentlist idx를 numseq로 변경
ALTER TABLE RENTLIST RENAME COLUMN IDX TO NUMSEQ;


-- 2. 필드 자료형의 변경
ALTER TABLE 테이블명 MODIFY 필드명 자료형 [디폴트값 OR 제약사항];

--VARCHAR2(12)였던 MEMBERLIST 테이블의 NAME필드를 VARCHAR2(30)으로 변경
ALTER TABLE MEMBERLIST MODIFY NAME VERCHAR2(30);


--외래키로 연결되어 있다면 자료형의 변경이 불가능하다
ALTER TABLE BOOKLIST MODIFY BOOKNUM NUMBER(5);
ALTER TABLE MEMBERLIST MODIFY MEMBERNUM NUMBER(5);
ALTER TABLE RENTLIST MODIFY BNUM NUMBER(5);
ALTER TABLE RENTLIST MODIFY MNUM NUMBER(5);

/*
외래키로 연결되어서 참조되고, 참조하고 있는 필드들은 위의 명령으로 수정이 불가능합니다. 
가능하게 하려면 외래키 제약 조건을 수정하여 없애버리고, 참조되는 필드와 참조하는 필드를 모두 수정한 후 외래키 제약조건을 다시 설정합니다. 
ALTER 명령에 의해 제약조건을 수정 또는 삭제하는 명령을 아래에서 학습합니다.
*/

-- 3. 필드의 추가
ALTER TABLE 테이블명 ADD 필드명 자료형

-- BOOKLIST에 구매등급을 저장할 수 있는 GRADE 필드를 VARCHAR2(15)로 추가
ALTER TABLE BOOKLIST ADD GRADE VARCHAR2(15);

ALTER TABLE MEMBERLIST ADD GENDER VARCHAR2(3);
ALTER TABLE MEMBERLIST ADD AGE NUMBER(2);

-- 4. 필드의 삭제
ALTER TABLE 테이블명 DROP COLUMN 필드명

-- MEMBERLIST에서 성별 필드 제거
ALTER TABLE MEMBERLIST DROP COLUMN GENDER;

-- 5. 제약조건의 추가 / 삭제
-- 필드 레벨의 제약조건의 수정 : MODIFY 명령으로 수정/생성/삭제
-- MEMBERLIST의 GENDER필드에 'M' 또는 'F' 둘 중 하나만 입력되게 제약조건을 설정
ALTER TABLE MEMBERLIST MODIFY GENDER VARCHAR2(3) CHECK(GENDER ='M' OR GENDER ='F');
ALTER TABLE MEMBERLIST MODIFY GENDER VARCHAR2(3) CHECK(GENDER IN('M','F'));

--테이블 레벨의 제약조건 생성 및 삭제
-- 추가 : ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 제약조건식

--MEMBERLIST 테이블의 나이(AGE) 필드에 120살이 초과되는 나이는 입력되지 못하게 제약조건 추가
ALTER TABLE MEMBERLIST ADD CONSTRAINT MAXAGE CHECK(AGE<=120);

-- 삭제 : ALTER TABLE 테이블명 DROP CONSTRAINT 제약조건명;
ALTER TABLE RENTLIST DROP CONSTRAINT FK1;
ALTER TABLE RENTLIST DROP CONSTRAINT FK2;

ALTER TABLE RENTLIST DROP CONSTRAINT RENT_PK;

SELECT * FROM BOOKLIST;
SELECT * FROM MEMBERLIST;
SELECT * FROM RENTLIST;

-- RENTLIST의 기본키(RENT_PK)를 NUMSEQ로 설정
ALTER TABLE RENTLIST ADD CONSTRAINT RENT_PK PRIMARY KEY(NUMSEQ);

-- RENTLIST의 외래키 FK1, FK2 재설정
ALTER TABLE RENTLIST ADD CONSTRAINT FK1 FOREIGN KEY(BNUM) REFERENCES BOOKLIST(BOOKNUM);
ALTER TABLE RENTLIST ADD CONSTRAINT FK2 FOREIGN KEY(MNUM) REFERENCES MEMBERLIST(MEMBERNUM);

/*
테이블 생성 EX
테이블명 : ORDERS1
필드 : 
	ORDER_ID NUMBER(12, 0)
	ORDER_DATE DATE
	ORDER_MODE VARCHAR2(8)
	CUSTOMER_ID NUMBER(8,2)
	ORDER_STATUS NUMBER(2,0)
	ORDER_TOTAL NUMBER(8,2)
	SALES_REP_ID NUMBER(6,0)
	PROMOTION_ID NUMBER(6,0)
	
제약사항 : 
	기본키 : ORDER_ID - 테이블레벨(제약명 : PK_ORDER)
	ORDER_MODE에는 direct, online만 입력가능 - 테이블레벨(제약명 : CK_ORDER_MODE)
	ORDER_TOTAL의 디폴트 값은 0 - 필드레벨
	ORDER_DATE의 디폴트값은 오늘날짜 - 필드레벨
*/

CREATE TABLE ORDERS1 (
	ORDER_ID NUMBER(12,0),
	ORDER_DATE DATE DEFAULT SYSDATE,
	ORDER_MODE VARCHAR2(8),
	CUSTOMER_ID NUMBER(6,0),
	ORDER_STATUS NUMBER(2, 0),
	ORDER_TOTAL NUMBER(8,2) DEFAULT 0,
	SALES_REP_ID NUMBER(6,0),
	PROMOTION_ID NUMBER(6,0),
	CONSTRAINT PK_ORDER PRIMARY KEY(ORDER_ID),
	CONSTRAINT CK_ORDER_MODE CHECK(ORDER_MODE IN('direct', 'online'))
);


/* 테이블 수정 EX
	CUSTOMER_ID 필드명을 CUSTOMER_NUMBER로 수정
	PROMOTION_ID 값은 10000,99999 사이의 값만 지정가능
*/
ALTER TABLE ORDERS1 RENAME COLUMN CUSTOMER_ID TO CUSTOMER_NUMBER;
ALTER TABLE ORDERS1 ADD CONSTRAINT PROMOTION_RANGE CHECK(PROMOTION_ID >=10000 AND PROMOTION_ID<100000)
ALTER TABLE ORDERS1 ADD CONSTRAINT PROMOTION_RANGE CHECK(PROMOTION_ID BETWEEN 10000 AND 9999

-- 테이블의 복사
CREATE TABLE ORDERS2 AS SELECT * FROM ORDERS1;

-- 테이블의 제거
DROP TABLE ORDERS2 PURGE;