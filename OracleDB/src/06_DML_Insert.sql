/* DML(Data Management Language) : 데이터 조작 언어

테이블에 레코드를 조작(추가, 수정, 삭제, 조회)하기 위한 명령어들
INSERT(추가)
UPDATE(수정)
DELETE(삭제)
SELECT(조회, 선택)
*/

-- 1. 샘플 테이블 생성
CREATE TABLE EXAM01(
	DEPTNO NUMBER(2),
	DNAME VARCHAR2(15),
	LOC VARCHAR2(15)
);

SELECT * FROM EXAM01;

-- 2. 레코드 추가
-- #1)
INSERT INTO 테이블명(필드명1, 필드명2, 필드명3, ...) VALUES(값1, 값2, 값3, ...);

-- #2)
INSERT INTO 테이블명 VALUES(값1, 값2, 값3,...);

--#1과 #2의 차이점
--#1 : 필드명과 입력되어야 하는 값들이 1:1 매칭되어 입력
-- 	   필드명의 순서는 반드시 지켜야하는 것은 아니지만 나열된 필드명대로 값들의 순서는 맞춰서 입력
INSERT INTO EXAM01(DEPTNO, DNAME, LOC) VALUES('기획부', 10, '서울'); --X
INSERT INTO EXAM01(DEPTNO, DNAME, LOC) VALUES(10, '기획부', '서울'); --O
INSERT INTO EXAM01(LOC, DEPTNO, DNAME) VALUES('서울', 10, '기획부'); --O
-- NULL값을 허용하거나 DEFAULT값이 있는 필드는 생략하고 구성 가능
INSERT INTO EXAM01(DEPTNO, DNAME) VALUES(10, '기획부'); --O

-- #2 : 모든 필드에 해당하는 값들을 최초에 테이블 생성 시에 기술한 필드순서에 맞게 모두 입력
INSERT INTO EXAM01 VALUES(10, '기획부','서울'); --O
-- #2 : NULL을 허용하는 곳을 비우고 입력할 수 없으며, NULL이라도 직접 지정해야 합니다. 
INSERT INTO EXAM01 VALUES(10, NULL, '서울'); --O

-- #1 과 #2 공통으로 숫자는 그냥 쓰고, 문자는 작은따옴표로 묶어 표현합니다. 

DELETE FROM BOOKLIST;

SELECT * FROM BOOKLIST;
-- 위 두가지 방법 중 자유롭게 선택하여서 BOOKLIST 테이블에 10개의 레코드를 추가해주세요. 
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'일곱해의 마지막',2020, 12150, 2000, 'ALL');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'봉제인형 살인사건',2019, 13150, 2000, '18');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'쇼코의 미소',2023, 13420, 2000, '12');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'좀비아이',2020, 12000, 2500, 'ALL');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'가면산장 살인사건',2018, 13320, 1500, '12');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'나미야 잡화점의 기적',2017, 13320, 2000, '18');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'유튜브 영상편집',2020, 20700, 2500, 'ALL');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'이것이 자바다',2017, 30000, 3000, '18');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'JSP웹프로그래밍',2016, 25000, 2500, 'ALL');
INSERT INTO BOOKLIST VALUES(BOOK_SEQ.NEXTVAL,'오라클 데이터베이스',2020, 30000, 3000, 'ALL');

SELECT * FROM MEMBERLIST;
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'홍길동','010-1111-2222', '75/11/13', 240, 'M', 23);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'김개똥','010-5164-2268', '45/12/03', 340, 'F', 27);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'라기라','010-7777-8848', '85/10/30', 440, 'F', 32);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'김성모','010-5124-3547', '95/01/01', 540, 'F', 25);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'윤대춘','010-1502-0012', '00/03/05', 220, 'M', 33);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'일음동','010-1851-2229', '02/02/19', 140, 'M', 24);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'황희찬','010-1131-2225', '75/05/12', 260, 'F', 65);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'손흥민','010-1511-2252', '94/07/16', 320, 'F', 34);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'김건모','010-9415-2382', '92/09/20', 570, 'F', 24);
INSERT INTO MEMBERLIST VALUES(MEMBER_SEQ.NEXTVAL,'최대한','010-1519-5712', '88/08/21', 470, 'M', 17);

SELECT * FROM BOOKLIST;
SELECT * FROM MEMBERLIST;

INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/01', 21, 1, 100);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/01', 25, 5, 200);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/01', 24, 4, 300);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/02', 26, 7, 400);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/02', 27, 8, 100);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/02', 29, 9, 100);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/03', 28, 1, 200);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/08', 27, 1, 300);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/12', 26, 4, 400);
INSERT INTO RENTLIST VALUES(RENT_SEQ.NEXTVAL, '2024/04/13', 22, 6, 500);
SELECT * FROM RENTLIST;

DELETE FROM RENTLIST;

COMMIT  -- 현재창에서 COMMIT은 세미콜론을 붙이지 않습니다. 단일명령이고 다른 명령과 함께 사용하지 않는다는 뜻입니다. 

-- 데이터베이스 백업명령
EXP USERID=SCOTT/TIGER FILE=ABC.DMP LOG=ABC.LOG

-- 데이터베이스 복원명령
IMP USERID=SCOTT/TIGER FILE=ABC.DMP LOG=ABC.LOG FULL=Y

-- 오라클의 백업명령과 복원명령은 모두 COMMAND창에서 실행합니다. 


