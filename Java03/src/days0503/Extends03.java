package days0503;

class SuperB{
	SuperB(int n){
	}
	
	SuperB(){}
}

class SubB extends SuperB{
	SubB(){
		//부모클래스의 생성자를 호출하는 명령이 따로 쓰이지 않으면, 이는 부모클래스의 디폴트 생성자를 호출합니다. super();
		super();
		//super();는 부모클래스의 생성자 중 매개변수가 없는 "디폴트 생성자"를 호출하는 명령이므로,
		//혹시라도 부모클래스의 생성자가 매개변수 있는 생성자로 대체되었다면 이는 에러를 발생

		/* 해결방법
			1. 부모클래스의 매개변수 형태대로 호출 : super();에 전달인수를 넣어줍니다. 
			ex) super(10);
			2. 부모클래스에 디폴트 생성자를 하나 추가합니다. 
			ex) superB(){}
			3. 부모클래스의 매개변수 있는 생성자를 매개변수 없는 디폴트 생성자로 바꿉니다. 
		 */

		// !! 부모클래스의 생성자 형태로 호출하거나, 그게 아니면 호출한데로 부모클래스 생성자를 추가하거나		
	}
	
	SubB(int n){
		//이 생성자는 부모클래스의 디폴트 생성자를 호출합니다. super();가 숨어있음.
		
		//부모클래스의 매개변수가 있는 생성자를 전달인수를 넣어서 호출할 수 도 있습니다. 
		//ex) super(10);
		
		// this()를 이용해서 super()명령을 포함하고 있는 형제생성자를 호출할 수도 있습니다. 
		this();
		
		//super(); or super(n); this();생성자는 이 셋중 하나만 쓸수 있습니다. 
		//맨 윗줄에만 사용할 수 있는 명령
	}
	SubB(int subNum, int num){
		this(10);
	}
}

public class Extends03 {

}
